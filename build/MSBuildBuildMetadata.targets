<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">  
  <Target Name="GetGitHash" BeforeTargets="WriteGitHash" Condition="'$(BuildHash)' == ''">

    <PropertyGroup>
      <MSBuildGitHashVersionFile>$(IntermediateOutputPath)gitversion</MSBuildGitHashVersionFile>
      <MSBuildGitHashRemoteFile>$(IntermediateOutputPath)gitremote</MSBuildGitHashRemoteFile>
      <MSBuildGitHashRemoteCommand>git remote get-url $(MSBuildGitHashRemote)</MSBuildGitHashRemoteCommand>
      <MSBuildGitHashCommand>git log -1 --pretty=tformat:%%H</MSBuildGitHashCommand>
      <MSBuildGitRepository 
        Condition="'$(MSBuildGitRepository)' == '' And '$(RepositoryType)' == 'git' And '$(RepositoryUrl)' != ''"
      >$(RepositoryUrl)</MSBuildGitRepository>
    </PropertyGroup>

    <Exec 
      Command="$(MSBuildGitHashCommand) &gt; $(MSBuildGitHashVersionFile)" 
      IgnoreExitCode="true"
    >
      <Output TaskParameter="ExitCode" PropertyName="MSBuildGitHashExitCode" />
    </Exec>

    <Error 
      Condition="'$(MSBuildGitHashExitCode)' != '0'" 
      Text="MSBuildGitHash error executing command $(MSBuildGitHashCommand) returned error code $(MSBuildGitHashExitCode)"
    />

    <Exec
      Condition="'$(MSBuildGitHashRemote)' != '' And '$(MSBuildGitRepository)' == ''"
      Command="$(MSBuildGitHashRemoteCommand) &gt; $(MSBuildGitHashRemoteFile)" 
      IgnoreExitCode="true"
    >
      <Output TaskParameter="ExitCode" PropertyName="MSBuildGitRemoteExitCode" />
    </Exec>

    <Error 
      Condition="'$(MSBuildGitHashRemote)' != '' And '$(MSBuildGitRemoteExitCode)' != '0'" 
      Text="MSBuildGitHash error executing command $(MSBuildGitHashRemoteCommand) returned error code $(MSBuildGitRemoteExitCode)"
    />

    <ReadLinesFromFile File="$(MSBuildGitHashVersionFile)">
      <Output TaskParameter="Lines" ItemName="GitVersion" />
    </ReadLinesFromFile>

    <ReadLinesFromFile 
      Condition="'$(MSBuildGitHashRemote)' != '' And '$(MSBuildGitRepository)' == '' And Exists('$(MSBuildGitHashRemoteFile)')"
      File="$(MSBuildGitHashRemoteFile)" 
    >
      <Output TaskParameter="Lines" ItemName="GitRemote" />
    </ReadLinesFromFile>

    <PropertyGroup>
      <MSBuildGitHashValue Condition="'$(MSBuildGitHashValue)' == ''">@(GitVersion)</MSBuildGitHashValue>
      <MSBuildGitRepository Condition="'$(MSBuildGitRepository)' == ''">@(GitRemote)</MSBuildGitRepository>
    </PropertyGroup>
  </Target>

  <Target Name="WriteGitHash" BeforeTargets="CoreCompile">

    <PropertyGroup>
      <LanguageExt Condition="'$(Language)' == 'C#'">.cs</LanguageExt>
      <LanguageExt Condition="'$(Language)' == 'VB'">.vb</LanguageExt>
      <CodeGenLanguage Condition="'$(Language)' == 'C#'">C#</CodeGenLanguage>
      <CodeGenLanguage Condition="'$(Language)' == 'VB'">VisualBasic</CodeGenLanguage>
      <MSBuildBuildMetadataAssemblyInfo>$(IntermediateOutputPath)MSBuildBuildMetadataAssemblyInfo$(LanguageExt)</MSBuildBuildMetadataAssemblyInfo>
    </PropertyGroup>

    <ItemGroup>
      <Compile Include="$(MSBuildBuildMetadataAssemblyInfo)" />
    </ItemGroup>

    <ItemGroup>
      <AssemblyAttributes Include="AssemblyMetadata">
        <_Parameter1>GitHash</_Parameter1>
        <_Parameter2>$(MSBuildGitHashValue)</_Parameter2>
      </AssemblyAttributes>

	  <AssemblyAttributes Include="AssemblyMetadata">
        <_Parameter1>BuildVersion</_Parameter1>
        <_Parameter2>$(MajorVersion).$(MinorVersion).$(PatchVersion)</_Parameter2>
      </AssemblyAttributes>
	  
      <AssemblyAttributes Include="AssemblyMetadata" Condition="'$(MSBuildGitRepository)' != ''">
        <_Parameter1>GitRepository</_Parameter1>
        <_Parameter2>$(MSBuildGitRepository)</_Parameter2>
      </AssemblyAttributes>
    </ItemGroup>

    <WriteCodeFragment Language="$(CodeGenLanguage)" OutputFile="$(MSBuildBuildMetadataAssemblyInfo)" AssemblyAttributes="@(AssemblyAttributes)" />

  </Target>
</Project>
